// Generated by Dagger (https://google.github.io/dagger).
package com.android.testapp.data.repository;

import com.android.testapp.data.webservice.RestService;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DataRepository_Factory implements Factory<DataRepository> {
  private final Provider<RestService> restServiceProvider;

  public DataRepository_Factory(Provider<RestService> restServiceProvider) {
    this.restServiceProvider = restServiceProvider;
  }

  @Override
  public DataRepository get() {
    return provideInstance(restServiceProvider);
  }

  public static DataRepository provideInstance(Provider<RestService> restServiceProvider) {
    return new DataRepository(restServiceProvider.get());
  }

  public static DataRepository_Factory create(Provider<RestService> restServiceProvider) {
    return new DataRepository_Factory(restServiceProvider);
  }

  public static DataRepository newDataRepository(RestService restService) {
    return new DataRepository(restService);
  }
}
