// Generated by Dagger (https://google.github.io/dagger).
package com.android.testapp.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.Retrofit;

public final class ApplicationModule_Companion_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final ApplicationModule.Companion module;

  public ApplicationModule_Companion_ProvideRetrofitFactory(ApplicationModule.Companion module) {
    this.module = module;
  }

  @Override
  public Retrofit get() {
    return provideInstance(module);
  }

  public static Retrofit provideInstance(ApplicationModule.Companion module) {
    return proxyProvideRetrofit(module);
  }

  public static ApplicationModule_Companion_ProvideRetrofitFactory create(
      ApplicationModule.Companion module) {
    return new ApplicationModule_Companion_ProvideRetrofitFactory(module);
  }

  public static Retrofit proxyProvideRetrofit(ApplicationModule.Companion instance) {
    return Preconditions.checkNotNull(
        instance.provideRetrofit(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
