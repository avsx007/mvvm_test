// Generated by Dagger (https://google.github.io/dagger).
package com.android.testapp.di.module;

import com.android.testapp.data.webservice.RestService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ApplicationModule_ProvideRetrofitServiceFactory implements Factory<RestService> {
  private final Provider<Retrofit> retrofitProvider;

  public ApplicationModule_ProvideRetrofitServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RestService get() {
    return provideInstance(retrofitProvider);
  }

  public static RestService provideInstance(Provider<Retrofit> retrofitProvider) {
    return proxyProvideRetrofitService(retrofitProvider.get());
  }

  public static ApplicationModule_ProvideRetrofitServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new ApplicationModule_ProvideRetrofitServiceFactory(retrofitProvider);
  }

  public static RestService proxyProvideRetrofitService(Retrofit retrofit) {
    return Preconditions.checkNotNull(
        ApplicationModule.provideRetrofitService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
