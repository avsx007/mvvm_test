// Generated by Dagger (https://google.github.io/dagger).
package com.android.testapp.viewmodel;

import com.android.testapp.data.repository.DataRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<DataRepository> dataRepositoryProvider;

  public HomeViewModel_Factory(Provider<DataRepository> dataRepositoryProvider) {
    this.dataRepositoryProvider = dataRepositoryProvider;
  }

  @Override
  public HomeViewModel get() {
    return provideInstance(dataRepositoryProvider);
  }

  public static HomeViewModel provideInstance(Provider<DataRepository> dataRepositoryProvider) {
    return new HomeViewModel(dataRepositoryProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<DataRepository> dataRepositoryProvider) {
    return new HomeViewModel_Factory(dataRepositoryProvider);
  }

  public static HomeViewModel newHomeViewModel(DataRepository dataRepository) {
    return new HomeViewModel(dataRepository);
  }
}
